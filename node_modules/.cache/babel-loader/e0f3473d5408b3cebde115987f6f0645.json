{"ast":null,"code":"import React from\"react\";import\"./SongRow.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SongRow(_ref){var track=_ref.track,playSong=_ref.playSong;console.log(track);return/*#__PURE__*/_jsxs(\"div\",{className:\"songRow\",onClick:function onClick(){return playSong(track.id);},children:[/*#__PURE__*/_jsx(\"img\",{className:\"songRow_album\",src:track.album.images[0].url,alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"songRow_info\",children:[/*#__PURE__*/_jsx(\"h1\",{children:track.name}),/*#__PURE__*/_jsxs(\"p\",{children:[track.artists.map(function(artist){return artist.name;}).join(\", \"),\" -\",\" \",track.album.name]})]})]});}export default SongRow;","map":{"version":3,"sources":["/home/mridul/react_projects/spotify-clone/src/SongRow.js"],"names":["React","SongRow","track","playSong","console","log","id","album","images","url","name","artists","map","artist","join"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,eAAP,C,wFAEA,QAASC,CAAAA,OAAT,MAAsC,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,CAAZC,QAAY,MAAZA,QAAY,CACpCC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACA,mBACE,aAAK,SAAS,CAAC,SAAf,CAAyB,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAACD,KAAK,CAACI,EAAP,CAAd,EAAlC,wBACE,YAAK,SAAS,CAAC,eAAf,CAA+B,GAAG,CAAEJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,EAAsBC,GAA1D,CAA+D,GAAG,CAAC,EAAnE,EADF,cAEE,aAAK,SAAS,CAAC,cAAf,wBACE,oBAAKP,KAAK,CAACQ,IAAX,EADF,cAEE,qBACGR,KAAK,CAACS,OAAN,CAAcC,GAAd,CAAkB,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACH,IAAnB,EAAlB,EAA2CI,IAA3C,CAAgD,IAAhD,CADH,MAC4D,GAD5D,CAEGZ,KAAK,CAACK,KAAN,CAAYG,IAFf,GAFF,GAFF,GADF,CAYD,CAED,cAAeT,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport \"./SongRow.css\";\n\nfunction SongRow({ track, playSong }) {\n  console.log(track);\n  return (\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\n      <img className=\"songRow_album\" src={track.album.images[0].url} alt=\"\" />\n      <div className=\"songRow_info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SongRow;\n"]},"metadata":{},"sourceType":"module"}