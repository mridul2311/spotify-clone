{"ast":null,"code":"import _slicedToArray from\"/home/mridul/react_projects/spotify-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import\"./App.css\";import Login from\"./Login\";import{getTokenFromUrl}from\"./spotify\";import{useDataLayerValue}from\"./DataLayer\";import SpotifyWebApi from\"spotify-web-api-js\";import Player from\"./Player\";import{jsx as _jsx}from\"react/jsx-runtime\";var spotify=new SpotifyWebApi();function App(){var _useDataLayerValue=useDataLayerValue(),_useDataLayerValue2=_slicedToArray(_useDataLayerValue,2),_useDataLayerValue2$=_useDataLayerValue2[0],user=_useDataLayerValue2$.user,token=_useDataLayerValue2$.token,dispatch=_useDataLayerValue2[1];useEffect(function(){var hash=getTokenFromUrl();window.location.hash=\"\";var _token=hash.access_token;if(_token){dispatch({type:\"SET_TOKEN\",token:_token});spotify.setAccessToken(_token);spotify.getMe().then(function(user){dispatch({type:\"SET_USER\",user:user});});}spotify.getUserPlaylists().then(function(playlists){dispatch({type:\"SET_PLAYLISTS\",playlists:playlists});});spotify.getPlaylist(\"37i9dQZEVXcPXWmjqbx8gs\").then(function(response){dispatch({type:\"SET_DISCOVER_WEEKLY\",discover_weekly:response});});},[]);//console.log(\"this is\",user);\n//console.log(\"token -> \",token);\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:token?/*#__PURE__*/_jsx(Player,{spotify:spotify}):/*#__PURE__*/_jsx(Login,{})});}export default App;","map":{"version":3,"sources":["/home/mridul/react_projects/spotify-clone/src/App.js"],"names":["React","useEffect","useState","Login","getTokenFromUrl","useDataLayerValue","SpotifyWebApi","Player","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","playlists","getPlaylist","response","discover_weekly"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,eAAT,KAAgC,WAAhC,CACA,OAASC,iBAAT,KAAkC,aAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,GAAIF,CAAAA,aAAJ,EAAhB,CAEA,QAASG,CAAAA,GAAT,EAAe,CACb,uBAAoCJ,iBAAiB,EAArD,sGAASK,IAAT,sBAASA,IAAT,CAAeC,KAAf,sBAAeA,KAAf,CAAwBC,QAAxB,wBAEAX,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,IAAI,CAAGT,eAAe,EAA5B,CACAU,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAuB,EAAvB,CACA,GAAMG,CAAAA,MAAM,CAAGH,IAAI,CAACI,YAApB,CAEA,GAAID,MAAJ,CAAY,CACVJ,QAAQ,CAAC,CACPM,IAAI,CAAE,WADC,CAEPP,KAAK,CAAEK,MAFA,CAAD,CAAR,CAIAR,OAAO,CAACW,cAAR,CAAuBH,MAAvB,EACAR,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAqB,SAACX,IAAD,CAAU,CAC7BE,QAAQ,CAAC,CACPM,IAAI,CAAE,UADC,CAEPR,IAAI,CAAEA,IAFC,CAAD,CAAR,CAID,CALD,EAMD,CACDF,OAAO,CAACc,gBAAR,GAA2BD,IAA3B,CAAgC,SAACE,SAAD,CAAe,CAC7CX,QAAQ,CAAC,CACPM,IAAI,CAAE,eADC,CAEPK,SAAS,CAAEA,SAFJ,CAAD,CAAR,CAID,CALD,EAOAf,OAAO,CAACgB,WAAR,CAAoB,wBAApB,EAA8CH,IAA9C,CAAmD,SAACI,QAAD,CAAc,CAC/Db,QAAQ,CAAC,CACPM,IAAI,CAAE,qBADC,CAEPQ,eAAe,CAAED,QAFV,CAAD,CAAR,CAID,CALD,EAMD,CA/BQ,CA+BN,EA/BM,CAAT,CAgCA;AACA;AAEA,mBACE,YAAK,SAAS,CAAC,KAAf,UACGd,KAAK,cAAG,KAAC,MAAD,EAAQ,OAAO,CAAEH,OAAjB,EAAH,cAAkC,KAAC,KAAD,IAD1C,EADF,CAKD,CAED,cAAeC,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Player\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n    }\n    spotify.getUserPlaylists().then((playlists) => {\n      dispatch({\n        type: \"SET_PLAYLISTS\",\n        playlists: playlists,\n      });\n    });\n\n    spotify.getPlaylist(\"37i9dQZEVXcPXWmjqbx8gs\").then((response) => {\n      dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response,\n      });\n    });\n  }, []);\n  //console.log(\"this is\",user);\n  //console.log(\"token -> \",token);\n\n  return (\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}